# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# --------------------------=== pod org1peer0 ===--------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pbft-org1peer0
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pbft-org1peer0
  template:
    metadata:
      labels:
        name: pbft-org1peer0
        app: sawtooth-org1

    spec:
      containers:
        # - name: sawtooth-intkey-tp-python
        #   image: hyperledger/sawtooth-intkey-tp-python:1.2.3
        #   command:
        #     - bash
        #   args:
        #     - -c
        #     - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

        - name: sawtooth-pbft-engine
          image: hyperledger/sawtooth-pbft-engine:1.0.3
          command:
            - bash
          args:
            - -c
            - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

        - name: sawtooth-rest-api
          image: hyperledger/sawtooth-rest-api:1.2.6
          ports:
            - name: api
              containerPort: 8008
          command:
            - bash
          args:
            - -c
            - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
          readinessProbe:
            httpGet:
              path: /status
              port: 8008
            initialDelaySeconds: 15
            periodSeconds: 10

        - name: sawtooth-settings-tp
          image: hyperledger/sawtooth-settings-tp:1.2.6
          command:
            - bash
          args:
            - -c
            - "settings-tp -vv -C tcp://$HOSTNAME:4004"

        - name: sawtooth-shell
          image: hyperledger/sawtooth-shell:1.2.6
          command:
            - bash
          args:
            - -c
            - "sawtooth keygen && tail -f /dev/null"

        - name: sawtooth-validator
          image: hyperledger/sawtooth-validator:1.2.6
          ports:
            - name: tp
              containerPort: 4004
            - name: consensus
              containerPort: 5050
            - name: validators
              containerPort: 8800
          
          volumeMounts:
            - name: validator-toml
              mountPath: /var/lib/sawtoothconfig/validator.toml
              subPath: validator.toml

          resources:
            requests:
            # limits:
            #   memory: "128Mi"
            #   cpu: "500m"

          env:
            - name: pbftorg1peer0priv
              valueFrom:
                configMapKeyRef:
                  name: keys-config
                  key: pbftorg1peer0priv
            - name: pbftorg1peer0pub
              valueFrom:
                configMapKeyRef:
                  name: keys-config
                  key: pbftorg1peer0pub

            - name: SAWTOOTH_HOME
              value: /var/lib/sawtooth  #https://sawtooth.hyperledger.org/docs/core/nightly/1-2/sysadmin_guide/configuring_sawtooth/path_configuration_file.html
          command:
            - bash
          args:
            - -c
            - |
                mkdir -p /var/lib/sawtooth/data &&
                mkdir -p /var/lib/sawtooth/logs &&
                mkdir -p /var/lib/sawtooth/keys &&
                mkdir -p /var/lib/sawtooth/policy &&
                mkdir -p /var/lib/sawtooth/etc &&
                cp /var/lib/sawtoothconfig/validator.toml /var/lib/sawtooth/etc/validator.toml &&
                if [ ! -e /var/lib/sawtooth/keys/validator.priv ]; then
                  echo $pbftorg1peer0priv > /var/lib/sawtooth/keys/validator.priv
                  echo $pbftorg1peer0pub > /var/lib/sawtooth/keys/validator.pub
                fi &&
                if [ ! -e /var/lib/sawtooth/keys/my_key.priv ]; then
                  echo $my_keyorg1peer0priv > /var/lib/sawtooth/keys/my_key.priv
                  echo $my_keyorg1peer0pub > /var/lib/sawtooth/keys/my_key.pub
                fi &&
                sawtooth-validator -vv \
                  --endpoint tcp://sawtooth-org1peer0:8800 \
                  --bind component:tcp://eth0:4004 \
                  --bind consensus:tcp://eth0:5050 \
                  --bind network:tcp://eth0:8800 \
                  --scheduler serial \
                  --peering static \
                  --maximum-peer-connectivity 10000 \
                  --peers tcp://sawtooth-org0peer0:8800 \
                  --peers tcp://sawtooth-org0peer1:8800 \
                  --peers tcp://sawtooth-org1peer1:8800


        # - name: sawtooth-xo-tp-python
        #   image: hyperledger/sawtooth-xo-tp-python:1.2.3
        #   command:
        #     - bash
        #   args:
        #     - -c
        #     - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

        - name: sawtooth-intkey-tp-js
          image: le999/tp1:1.0
          command:
            - bash
          args:
            - -c
            - "VALIDATOR=tcp://$HOSTNAME:4004 node ./index.js"

      volumes:
        - name: validator-toml
          configMap:
            name: validator-toml
---


apiVersion: v1
kind: Service
metadata:
  name: sawtooth-org1peer0
spec:
  type: ClusterIP
  selector:
    name: pbft-org1peer0
  ports:
    - name: "4004"
      protocol: TCP
      port: 4004
      targetPort: 4004
    - name: "5050"
      protocol: TCP
      port: 5050
      targetPort: 5050
    - name: "8008"
      protocol: TCP
      port: 8008
      targetPort: 8008
    - name: "8800"
      protocol: TCP
      port: 8800
      targetPort: 8800

---
# --------------------------=== pod org1peer1 ===--------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pbft-org1peer1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pbft-org1peer1
  template:
    metadata:
      labels:
        name: pbft-org1peer1
        app: sawtooth-org1

    spec:
      containers:
        # - name: sawtooth-intkey-tp-python
        #   image: hyperledger/sawtooth-intkey-tp-python:1.2.3
        #   command:
        #     - bash
        #   args:
        #     - -c
        #     - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

        - name: sawtooth-pbft-engine
          image: hyperledger/sawtooth-pbft-engine:1.0.3
          command:
            - bash
          args:
            - -c
            - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

        - name: sawtooth-rest-api
          image: hyperledger/sawtooth-rest-api:1.2.6
          ports:
            - name: api
              containerPort: 8008
          command:
            - bash
          args:
            - -c
            - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
          readinessProbe:
            httpGet:
              path: /status
              port: 8008
            initialDelaySeconds: 15
            periodSeconds: 10

        - name: sawtooth-settings-tp
          image: hyperledger/sawtooth-settings-tp:1.2.6
          command:
            - bash
          args:
            - -c
            - "settings-tp -vv -C tcp://$HOSTNAME:4004"

        - name: sawtooth-shell
          image: hyperledger/sawtooth-shell:1.2.6
          command:
            - bash
          args:
            - -c
            - "sawtooth keygen && tail -f /dev/null"

        - name: sawtooth-validator
          image: hyperledger/sawtooth-validator:1.2.6
          ports:
            - name: tp
              containerPort: 4004
            - name: consensus
              containerPort: 5050
            - name: validators
              containerPort: 8800
          
          volumeMounts:
            - name: validator-toml
              mountPath: /var/lib/sawtoothconfig/validator.toml
              subPath: validator.toml

          resources:
            requests:
            # limits:
            #   memory: "128Mi"
            #   cpu: "500m"

          env:
            - name: pbftorg1peer1priv
              valueFrom:
                configMapKeyRef:
                  name: keys-config
                  key: pbftorg1peer1priv
            - name: pbftorg1peer1pub
              valueFrom:
                configMapKeyRef:
                  name: keys-config
                  key: pbftorg1peer1pub

            - name: SAWTOOTH_HOME
              value: /var/lib/sawtooth  #https://sawtooth.hyperledger.org/docs/core/nightly/1-2/sysadmin_guide/configuring_sawtooth/path_configuration_file.html
          command:
            - bash
          args:
            - -c
            - |
                mkdir -p /var/lib/sawtooth/data &&
                mkdir -p /var/lib/sawtooth/logs &&
                mkdir -p /var/lib/sawtooth/keys &&
                mkdir -p /var/lib/sawtooth/policy &&
                mkdir -p /var/lib/sawtooth/etc &&
                cp /var/lib/sawtoothconfig/validator.toml /var/lib/sawtooth/etc/validator.toml &&
                if [ ! -e /var/lib/sawtooth/keys/validator.priv ]; then
                  echo $pbftorg1peer1priv > /var/lib/sawtooth/keys/validator.priv
                  echo $pbftorg1peer1pub > /var/lib/sawtooth/keys/validator.pub
                fi &&
                if [ ! -e /var/lib/sawtooth/keys/my_key.priv ]; then
                  echo $my_keyorg1peer1priv > /var/lib/sawtooth/keys/my_key.priv
                  echo $my_keyorg1peer1pub > /var/lib/sawtooth/keys/my_key.pub
                fi &&
                sawtooth-validator -vv \
                  --endpoint tcp://sawtooth-org1peer1:8800 \
                  --bind component:tcp://eth0:4004 \
                  --bind consensus:tcp://eth0:5050 \
                  --bind network:tcp://eth0:8800 \
                  --scheduler serial \
                  --peering static \
                  --maximum-peer-connectivity 10000 \
                  --peers tcp://sawtooth-org0peer0:8800 \
                  --peers tcp://sawtooth-org0peer1:8800 \
                  --peers tcp://sawtooth-org1peer0:8800


        # - name: sawtooth-xo-tp-python
        #   image: hyperledger/sawtooth-xo-tp-python:1.2.3
        #   command:
        #     - bash
        #   args:
        #     - -c
        #     - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

        - name: sawtooth-intkey-tp-js
          image: le999/tp1:1.0
          command:
            - bash
          args:
            - -c
            - "VALIDATOR=tcp://$HOSTNAME:4004 node ./index.js"

      volumes:
        - name: validator-toml
          configMap:
            name: validator-toml
---


apiVersion: v1
kind: Service
metadata:
  name: sawtooth-org1peer1
spec:
  type: ClusterIP
  selector:
    name: pbft-org1peer1
  ports:
    - name: "4004"
      protocol: TCP
      port: 4004
      targetPort: 4004
    - name: "5050"
      protocol: TCP
      port: 5050
      targetPort: 5050
    - name: "8008"
      protocol: TCP
      port: 8008
      targetPort: 8008
    - name: "8800"
      protocol: TCP
      port: 8800
      targetPort: 8800

---


apiVersion: v1
kind: Service
metadata:
  name: sawtooth-org1
spec:
  type: ClusterIP
  selector:
    app: sawtooth-org1
  ports:
    - name: "4004"
      protocol: TCP
      port: 4004
      targetPort: 4004
    - name: "5050"
      protocol: TCP
      port: 5050
      targetPort: 5050
    - name: "8008"
      protocol: TCP
      port: 8008
      targetPort: 8008
    - name: "8800"
      protocol: TCP
      port: 8800
      targetPort: 8800
---
